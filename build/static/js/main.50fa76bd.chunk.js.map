{"version":3,"sources":["components/About.js","components/Contact.jsx","context/notes/noteContext.js","components/Noteitem.js","components/AddNote.js","components/Notes.js","components/Home.js","components/Navbar.js","context/notes/NoteState.js","components/Login.js","components/Signup.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","className","id","type","Contact","for","placeholder","rows","onClick","alert","noteContext","createContext","Noteitem","deleteNote","useContext","note","updatenote","color","title","tag","description","_id","AddNote","addNote","useState","setnote","onchange","e","target","name","value","htmlFor","onChange","minLength","required","class","disabled","length","preventDefault","Notes","etitle","edescription","etag","context","navigate","useNavigate","notes","getNotes","editNote","useEffect","localStorage","getItem","ref","useRef","refclose","currentNote","current","click","tabIndex","console","log","map","Home","showAlert","Navbar","Navigate","to","removeItem","role","NoteState","host","setNotes","a","fetch","method","headers","response","json","body","JSON","stringify","concat","newNotes","filter","parse","index","Provider","children","Login","email","password","credentials","setCredentials","handleSubmit","success","setItem","authtoken","onSubmit","Signup","cpassword","Alert","style","height","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","App","setAlert","message","setTimeout","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50fa76bd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            <h1 className=\"my-3\" >About Notebok</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\">\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                            <strong>Upload your notes on cloud</strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" >\r\n                            Our notebook gives you a way to upload your site quickly and efficently on the server.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                            <strong>Free to use </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" >\r\n                            Lorem ipsum dolor sit amet consectetur adipisicing elit. Accusamus ducimus mollitia officia odit tempore aperiam. Natus eligendi id quis quae rerum? Doloribus voluptas, necessitatibus voluptatum incidunt obcaecati quam earum architecto?\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\">\r\n                    <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                        <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                            <strong>Browser Compatible </strong>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                        <div className=\"accordion-body\" >\r\n                            <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Ex, alias earum fugit aperiam, libero commodi sunt animi sequi possimus nihil eum aliquam rerum qui quod, debitis consequatur rem tenetur? Placeat.</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nconst Contact = () => {\r\n  // const show = () => {\r\n  //   alert(\"Currently this is not completed\")\r\n  // }\r\n  return (\r\n    <div className='container'>\r\n      <div className=\"mb-3 \">\r\n        <label for=\"exampleFormControlInput1\" className=\"form-label\">Email address</label>\r\n        <input type=\"email\" className=\"form-control\" id=\"exampleFormControlInput1\" placeholder=\"name@example.com\" />\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <label for=\"exampleFormControlTextarea1\" className=\"form-label\">Example textarea</label>\r\n        <textarea className=\"form-control\" id=\"exampleFormControlTextarea1\" rows=\"3\"></textarea>\r\n      </div>\r\n      <div >\r\n\r\n        <button type=\"button\" className=\"btn btn-success\" onClick={()=>{alert(\"currently this is not completed\")}}>Submit</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact","import { createContext } from \"react\";\r\n\r\nconst noteContext = createContext();\r\n\r\nexport default noteContext;","import React, { useContext } from 'react'\r\nimport noteContext from \"../context/notes/noteContext\"\r\n\r\nconst Noteitem = (props) => {\r\n    const context = useContext(noteContext);\r\n    const { deleteNote } = context;\r\n    const { note, updatenote} = props;\r\n    return (\r\n        <div className=\"col-md-3\">\r\n            <div className=\"card my-3\">\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title text-center\" color='pink'>{note.title}</h5>\r\n                    <p className=\"card-text\">{note.tag}</p>\r\n                </div>\r\n                <p className=\"card-text\">{note.description}</p>\r\n                <div className=\"container\">\r\n                    <i className=\"far fa-trash-alt mx-3\" onClick={() => { deleteNote(note._id) }}></i>\r\n                    <i className=\"far fa-edit mx-3\" onClick={()=>{updatenote(note)}}></i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Noteitem\r\n","import React, { useContext, useState } from 'react'\r\nimport noteContext from '../context/notes/noteContext';\r\nfunction AddNote() {\r\n    const context = useContext(noteContext);\r\n    const { addNote } = context;\r\n    const [note, setnote] = useState({ title: \"\", description: \"\", tag: \"\" });\r\n\r\n    const handleclick = (e) => {\r\n        e.preventDefault();\r\n        addNote(note.title, note.description, note.tag)\r\n        setnote({ title: \"\", description: \"\", tag: \"\" });\r\n    }\r\n    const onchange = (e) => {\r\n        setnote({ ...note, [e.target.name]: e.target.value })\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container my-3 \">\r\n                <h2 className='text-center' color='pink'>Welcome to Notebook</h2>\r\n                <form className=\"my-3\">\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"title\" className=\"form-label\" color='MediumTurquoise'>Title</label>\r\n                        <input type=\"text\" className=\"form-control\" my-10 id=\"title\" name=\"title\" aria-describedby=\"emailHelp\" value={note.title} onChange={onchange} minLength={5} required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"description\" className=\"form-label\" color='MediumTurquoise'>Description</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"description\" rows=\"8\" name=\"description\" value={note.description} onChange={onchange} minLength={5} required />\r\n                    </div>\r\n                    <div className=\"mb-3\">\r\n                        <label htmlFor=\"description\" className=\"form-label\" color='MediumTurquoise'>tag</label>\r\n                        <input type=\"text\" className=\"form-control\" id=\"tag\" rows=\"8\" name=\"tag\" value={note.tag} onChange={onchange} minLength={5} required />\r\n                    </div>\r\n                    <button type=\"button\" class=\"btn btn-success\" disabled={note.title.length < 5 || note.description.length < 5 || note.tag.length < 5} onClick={handleclick}> Add Note</button>\r\n                </form>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default AddNote","import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport noteContext from \"../context/notes/noteContext\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Noteitem from './Noteitem';\r\nimport AddNote from './AddNote';\r\nconst Notes = () => {\r\n  const [note, setnote] = useState({ id: \" \", etitle: \"\", edescription: \"\", etag: \"\" });\r\n  const context = useContext(noteContext);\r\n  let navigate = useNavigate();\r\n  const { notes, getNotes, editNote } = context;\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      getNotes()\r\n    }\r\n    else {\r\n      navigate(\"/Login\");\r\n    }\r\n    // eslint-disable-next-line\r\n  }, [])\r\n  const ref = useRef(null)\r\n  const refclose = useRef(null)\r\n\r\n  const updatenote = (currentNote) => {\r\n    ref.current.click();\r\n    setnote({ id: currentNote._id, etitle: currentNote.title, edescription: currentNote.description, etag: currentNote.tag });\r\n  }\r\n  const onchange = (e) => {\r\n    setnote({ ...note, [e.target.name]: e.target.value });\r\n  }\r\n  const handleClick = () => {\r\n    console.log(\"Handleclick was click\", note);\r\n    editNote(note.id, note.etitle, note.edescription, note.etag)\r\n    refclose.current.click();\r\n\r\n  }\r\n  return (\r\n    <c>\r\n      <AddNote />\r\n      <button ref={ref} type=\"button\" className=\"btn btn-primary d-none\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">\r\n        Launch demo modal\r\n      </button>\r\n      <div className=\"modal fade\" id=\"exampleModal\" tabIndex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\" id=\"exampleModalLabel\" color='pink' >Edit Note</h5>\r\n              <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <form className=\"my-3\">\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"title\" className=\"form-label\" color='MediumTurquoise'>Title</label>\r\n                  <input type=\"text\" className=\"form-control\" my-10 id=\"etitle\" name=\"etitle\" value={note.etitle} aria-describedby=\"emailHelp\" onChange={onchange} minLength={5} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"edescription\" className=\"form-label\" color='MediumTurquoise'>Description</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"edescription\" rows=\"8\" name=\"edescription\" value={note.edescription} onChange={onchange} minLength={5} required />\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                  <label htmlFor=\"edescription\" className=\"form-label\" color='MediumTurquoise'>tag</label>\r\n                  <input type=\"text\" className=\"form-control\" id=\"etag\" rows=\"8\" name=\"etag\" value={note.etag} onChange={onchange} minLength={5} required />\r\n                </div>\r\n              </form>\r\n\r\n            </div>\r\n            <div className=\"modal-footer\">\r\n              <button ref={refclose} type=\"button\" className=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Close</button>\r\n              <button disabled={note.etitle.length < 5 || note.edescription.length < 5 || note.etag.length < 5} onClick={handleClick} type=\"button\" className=\"btn btn-primary\">Update Note</button>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row my-3 text-center\">\r\n        <h2 color='MediumTurquoise'>Your Notes</h2>\r\n        <div className=\"container \">\r\n          {notes.length === 0 && \"No notes to display\"}\r\n        </div>\r\n        {notes.map((note) => {\r\n          return <Noteitem key={note._id} updatenote={updatenote} note={note} />\r\n        })}\r\n      </div>\r\n    </c>\r\n  )\r\n}\r\n\r\nexport default Notes\r\n","import React from 'react'\r\nimport Notes from './Notes'\r\nexport const Home = (props) => {\r\n    const { showAlert } = props;\r\n    return (\r\n        <div className='container'>\r\n            <Notes showAlert={showAlert}/>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Outlet, Link, useNavigate } from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    let Navigate = useNavigate();\r\n\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('token')\r\n        Navigate('/Login')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-black\">\r\n                <div className=\"container-fluid\">\r\n                    <Link className=\"navbar-brand\" to=\"/\">Home</Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                        <span className=\"navbar-toggler-icon\"></span> </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                        <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/About\">About</Link>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <Link className=\"nav-link active\" to=\"/Contact\">Contact</Link>\r\n                            </li>\r\n                        </ul>\r\n                        {!localStorage.getItem('token') ? <from className=\"d-flex\">\r\n                            <Link to=\"/Login\" className='btn btn-success mx-1' role='button'>Login</Link>\r\n                            <Link to=\"/Signup\" className='btn btn-success mx-1' role='button'>Signup</Link>\r\n                        </from> : <button onClick={handleLogout} className='btn btn-success'>Logout</button>}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n            <Outlet />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar","import noteContext from \"./noteContext\";\r\nimport { useState } from \"react\";\r\nconst NoteState = (props) => {\r\n    const host = \"http://localhost:5000\"\r\n    const notesInitial = []\r\n    const [notes, setNotes] = useState(notesInitial)\r\n\r\n    // Get all Notes\r\n    const getNotes = async () => {\r\n        // API Call \r\n        const response = await fetch(`${host}/api/notes/fetchallnotes`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": localStorage.getItem('token')\r\n            }\r\n        });\r\n        const json = await response.json()\r\n        setNotes(json)\r\n    }\r\n    // Add a Note\r\n    const addNote = async (title, description, tag) => {\r\n        const response = await fetch(`${host}/api/notes/addnote`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        });\r\n\r\n        const note = await response.json();\r\n        setNotes(notes.concat(note))\r\n    }\r\n\r\n    // Delete a Note\r\n    const deleteNote = async (id) => {\r\n        // API Call\r\n        const response = await fetch(`${host}/api/notes/deletenote/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": localStorage.getItem('token')\r\n            }\r\n        });\r\n        const json = response.json();\r\n        const newNotes = notes.filter((note) => { return note._id !== id })\r\n        setNotes(newNotes)\r\n        console.log(json)\r\n    }\r\n\r\n    // Edit a Note\r\n    const editNote = async (id, title, description, tag) => {\r\n        // API Call \r\n        const response = await fetch(`${host}/api/notes/updatenote/${id}`, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                \"auth-token\": localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        });\r\n        const json = await response.json();\r\n        let newNotes = JSON.parse(JSON.stringify(notes))\r\n        // Logic to edit in client\r\n        for (let index = 0; index < newNotes.length; index++) {\r\n            const element = newNotes[index];\r\n            if (element._id === id) {\r\n                newNotes[index].title = title;\r\n                newNotes[index].description = description;\r\n                newNotes[index].tag = tag;\r\n                break;\r\n            }\r\n        }\r\n        setNotes(newNotes);\r\n        console.log(json)\r\n    }\r\n\r\n    return (\r\n        <noteContext.Provider value={{ notes, addNote, deleteNote, editNote, getNotes }}>\r\n            {props.children}\r\n        </noteContext.Provider>\r\n    )\r\n\r\n}\r\nexport default NoteState;","// import React, { useState } from 'react'\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import Logo from './Logo.png'\r\n// import './Style.css'\r\n// export default function Login() {\r\n//     const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault();\r\n//         const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n//         });\r\n//         const json = await response.json()\r\n//         console.log(json);\r\n//         if (json.success) {\r\n//             // Save the auth token and redirect\r\n//             localStorage.setItem('token', json.authtoken);\r\n//             // history.push(\"/\");\r\n//             navigate('/');\r\n\r\n//         }\r\n//         else {\r\n//             alert(\"Invalid credentials\");\r\n//         }\r\n//     }\r\n\r\n//     const onChange = (e) => {\r\n//         setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n//     }\r\n//     const handleclick = () => {\r\n//         alert(\"Curently This feature is Not avaliable\")\r\n//     }\r\n\r\n//     return (\r\n//         <>\r\n//             <div className=\"logo text-center\">\r\n//             </div>\r\n//             <div className=\"wrapper\">\r\n//                 <img style={{ width: \"35%\", borderRadius: \"50%\", display: \"block\", margin: \"10px auto\" }} src={Logo} alt=\"XXXXXX\" />\r\n//                 <div className=\"inner-warpper text-center\">\r\n//                     <h2 className=\"title\">Login to your account</h2>\r\n//                     <form action=\"\" id=\"formvalidate\" onSubmit={handleSubmit}>\r\n//                         <div className=\"input-group\">\r\n//                             <label className=\"palceholder\" for=\"userName\"></label>\r\n//                             {/* <input className=\"form-control\" name=\"userName\" id=\"userName\" type=\"text\" placeholder=\"User Name\" /> */}\r\n//                             <input type=\"email\" className=\"form-control\" value={credentials.email} placeholder=\"Email\" onChange={onChange} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n//                             <span className=\"lighting\"></span>\r\n//                         </div>\r\n//                         <div className=\"input-group\">\r\n//                             <label className=\"palceholder\" for=\"userPassword\"></label>\r\n//                             {/* <input className=\"form-control\" name=\"userPassword\" id=\"userPassword\" type=\"password\" placeholder=\"Password\" /> */}\r\n//                             <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name=\"password\" placeholder=\"Password\" id=\"password\" />\r\n//                             <span className=\"lighting\"></span>\r\n//                         </div>\r\n//                         <button type=\"submit\" id=\"login\" >Login</button>\r\n//                         <div className=\"clearfix supporter\">\r\n//                             <div className=\"pull-left remember-me\">\r\n//                                 <input id=\"rememberMe\" type=\"checkbox\" />\r\n//                                 <label for=\"rememberMe\">Remember Me</label>\r\n//                             </div>\r\n//                             <a className=\"forgot pull-right\" href=\"/\" onClick={handleclick}>Forgot Password?</a>\r\n//                         </div>\r\n//                     </form>\r\n//                 </div>\r\n//                 <div className=\"signup-wrapper text-center\">\r\n//                     <Link to=\"/Signup\">Don't have an accout? <span className=\"text-primary\">Create One</span></Link>\r\n\r\n//                 </div>\r\n//                 <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>\r\n//                 <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.min.js'></script>\r\n//             </div>\r\n//         </>\r\n//     )\r\n// }\r\n// import React, { useState } from 'react'\r\n// import { Link, useNavigate } from 'react-router-dom';\r\n// import Logo from './Logo.png'\r\n// import './Style.css'\r\n// export default function Login() {\r\n//   const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n//     });\r\n//     const json = await response.json()\r\n//     console.log(json);\r\n//     if (json.success) {\r\n//       // Save the auth token and redirect\r\n//       localStorage.setItem('token', json.authtoken);\r\n//       // history.push(\"/\");\r\n//       navigate('/');\r\n\r\n//     }\r\n//     else {\r\n//       alert(\"Invalid credentials\");\r\n//     }\r\n//   }\r\n\r\n//   const onChange = (e) => {\r\n//     setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n//   }\r\n//   const handleclick = () => {\r\n//     alert(\"Curently This feature is Not avaliable\")\r\n//   }\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"logo text-center\">\r\n//       </div>\r\n//       <div className=\"wrapper\">\r\n//         <img style={{ width: \"35%\", borderRadius: \"50%\", display: \"block\", margin: \"10px auto\" }} src={Logo} alt=\"XXXXXX\" />\r\n//         <div className=\"inner-warpper text-center\">\r\n//           <h2 className=\"title\">Signup New Account</h2>\r\n//           <form action=\"\" id=\"formvalidate\" onSubmit={handleSubmit}>\r\n//             <div className=\"input-group\">\r\n//               <label className=\"palceholder\" for=\"userName\"></label>\r\n//               {/* <input className=\"form-control\" name=\"userName\" id=\"userName\" type=\"text\" placeholder=\"User Name\" /> */}\r\n//               <input type=\"email\" className=\"form-control\" value={credentials.email} placeholder=\"Name\" onChange={onChange} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n//               <span className=\"lighting\"></span>\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label className=\"palceholder\" for=\"userPassword\"></label>\r\n//               {/* <input className=\"form-control\" name=\"userPassword\" id=\"userPassword\" type=\"password\" placeholder=\"Password\" /> */}\r\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name=\"password\" placeholder=\"Password\" id=\"password\" />\r\n//               <span className=\"lighting\"></span>\r\n//             </div>\r\n//             <div className=\"input-group\">\r\n//               <label className=\"palceholder\" for=\"userPassword\"></label>\r\n//               {/* <input className=\"form-control\" name=\"userPassword\" id=\"userPassword\" type=\"password\" placeholder=\"Password\" /> */}\r\n//               <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name=\"password\" placeholder=\"Confirm Password\" id=\"password\" />\r\n//               <span className=\"lighting\"></span>\r\n//             </div>\r\n//             <button type=\"submit\" id=\"login\" >Signup</button>\r\n//           </form>\r\n//         </div>\r\n//         <script src='https://code.jquery.com/jquery-2.2.4.min.js'></script>\r\n//         <script src='https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.15.0/jquery.validate.min.js'></script>\r\n//       </div>\r\n//     </>\r\n//   )\r\n// }\r\nimport React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst Login = (props) => {\r\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\" })\r\n    let navigate = useNavigate();\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const response = await fetch(\"http://localhost:5000/api/auth/login\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: credentials.email, password: credentials.password })\r\n        });\r\n        const json = await response.json()\r\n        console.log(json);\r\n        if (json.success) {\r\n            // Save the auth token and redirect\r\n            localStorage.setItem('token', json.authtoken);\r\n            navigate(\"/\");\r\n            props.showAlert(\"Login successfully\", \"success\")\r\n        }\r\n        else {\r\n            props.showAlert(\"Invalid Details\", \"danger\")\r\n        }\r\n    }\r\n\r\n    const onChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <form onSubmit={handleSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"email\" className=\"form-label\">Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" value={credentials.email} onChange={onChange} id=\"email\" name=\"email\" aria-describedby=\"emailHelp\" />\r\n                    <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"password\" className=\"form-label\">Password</label>\r\n                    <input type=\"password\" className=\"form-control\" value={credentials.password} onChange={onChange} name=\"password\" id=\"password\" />\r\n                </div>\r\n\r\n                <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nconst Signup = (props) => {\r\n\r\n  const [credentials, setCredentials] = useState({ name: \"\", email: \"\", password: \"\", cpassword: \"\" })\r\n  let navigate = useNavigate();\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { name, email, password } = credentials;\r\n    const response = await fetch(\"http://localhost:5000/api/auth/createuser\", {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ name, email, password })\r\n    });\r\n    const json = await response.json()\r\n    console.log(json);\r\n    if (json.success) {\r\n      // Save the auth token and redirect\r\n      localStorage.setItem('token', json.authtoken);\r\n      navigate(\"/\");\r\n      props.showAlert(\"Account created successfully\", \"success\")\r\n\r\n    }\r\n    else {\r\n      props.showAlert(\"Invalid crenditials\", \"danger\")\r\n    }\r\n  }\r\n  const onChange = (e) => {\r\n    setCredentials({ ...credentials, [e.target.name]: e.target.value })\r\n  }\r\n  return (\r\n    <div className='container my-2'>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"name\" className=\"form-label\">Name</label>\r\n          <input type=\"text\" className=\"form-control\" id=\"name\" name=\"name\" onChange={onChange} aria-describedby=\"emailHelp\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Email address</label>\r\n          <input type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" name='email' onChange={onChange} aria-describedby=\"emailHelp\" />\r\n          <div id=\"emailHelp\" className=\"form-text\">We'll never share your email with anyone else.</div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Password</label>\r\n          <input type=\"password\" className=\"form-control\" onChange={onChange} name='password' minLength={3} required id=\"exampleInputPassword1\" />\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">confirm password</label>\r\n          <input type=\"password\" className=\"form-control\" onChange={onChange} name='cpassword' minLength={3} required id=\"exampleInputPassword1\" />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-success\">Submit</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        <div style={{ height: '50px' }}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport About from './components/About';\nimport Contact from './components/Contact';\nimport { Home } from './components/Home';\nimport Navbar from './components/Navbar';\nimport NoteState from './context/notes/NoteState';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Alert from './components/Alert';\nimport { useState } from 'react';\n\nfunction App() {\n\n  const [alert, setAlert] = useState(null)\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  return (\n    <>\n      <NoteState>\n        <Router>\n          <Navbar />\n          <Alert alert={alert} />\n          <Routes>\n            <Route exact path='/' element={<Home />} />\n            <Route path='/About' element={<About />} />\n            <Route path='/Contact' element={<Contact />} />\n            <Route path='/Signup' element={<Signup showAlert={showAlert} />} />\n            <Route path='/Login' element={<Login showAlert={showAlert} />} />\n          </Routes>\n        </Router>\n\n      </NoteState>\n    </>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n            getCLS(onPerfEntry);\r\n            getFID(onPerfEntry);\r\n            getFCP(onPerfEntry);\r\n            getLCP(onPerfEntry);\r\n            getTTFB(onPerfEntry);\r\n        });\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}